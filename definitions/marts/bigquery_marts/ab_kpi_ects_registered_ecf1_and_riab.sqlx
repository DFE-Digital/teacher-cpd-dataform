config {
    type: "table",
    bigquery: {
        partitionBy: "",
        clusterBy: ["ab_indicated_on_ecf1"]
    },
    description: "This mart is designed to be used as part of the Appropriate Body KPI report for the AB and regs team. It contains all ECT registrations in the ECF1 service made in the 2025 cohort and joins the ECTsâ€™ respective induction period created in RIAB, if it exists. Registrations in ECF1 are joined to created induction periods via TRN. The existence of an induction period created in RIAB for that ECT is indicated by the in_riab boolean field. For this mart to be adjusted for future use, the cohort filter in the ECF1 CTE should be changed, and the induction periods created after the opening window date should be updated in the RIAB CTE. This mart uses two static tables, which should also be checked before future use. The first, tsh_lsoa_lookup_2023, maps schools to hub regions through the GIAS LSOA code. The second, ab_to_hub_region_mapping_2025_09_15, maps ECF1 appropriate body names to RIAB appropriate body names; this is used to extract the AB region.",
    columns: {
        user_id: "The ECF1 user ID, this comes from the teacher profile associated with the participant profile",
        trn: {
            description: "TRN for the ECT that registered for training in the ECF1 service.",
            bigqueryPolicyTags: ["projects/ecf-bq/locations/europe-west2/taxonomies/6302091323314055162/policyTags/301313311867345339"]
        },
        ect_name: {
            description: "Full name for the ECT that registered for training in the ECF1 service.",
            bigqueryPolicyTags: ["projects/ecf-bq/locations/europe-west2/taxonomies/6302091323314055162/policyTags/301313311867345339"]
        },
        school_urn : "URN of the ECT's school.",
        school_name: "Name of the ECT's school",
        ab_indicated_on_ecf1: "The ECF1 name of the appropriate body indicated on the ECTs registration in ECF1.",
        ab_hub_region: "The hub region of the appropriate body indicated on the ECTs registration in ECF1.",
        school_hub_region: "The region of the school indicated on the ECTs registration in ECF1.",
        induction_programme_type: "The induction programme the ECT is undertaking (FIP / CIP / DIY) : potential values: full_induction_programme core_induction_programme, design_our_own, school_funded_fip.",
        date_ect_registered_ecf1: "The date the ECT registered on the ECF1 service.",
        induction_period_created_riab: "The date the ECT recorded an induction on the RIAB service",
        in_riab: "A calculated field used to determine whether an ECTs registration in ECF1, also has an induction period created in riab in the same cohort / registration window.",
    }
}
WITH riab as (
  SELECT trn, appropriate_body_name, true as in_riab, DATE(induction_period_created_at) as induction_period_created_riab
FROM ${ref('ecf2_teacher_induction_periods')}
  -- for future registration windows, this date should be updated with the first opportunitty to create induction windows in the registration window
  WHERE induction_period_created_at >= '2025-04-01'
  QUALIFY ROW_NUMBER() OVER (
  PARTITION BY trn
  ORDER BY induction_period_created_at DESC
) = 1),

ecf1 as (
SELECT
  user_id,
  trn, 
  school_urn,
  appropriate_body_name as ab_indicated_on_ecf1,
  induction_programme_type,
  DATE(created_at) as date_ect_registered_ecf1,
  appropriate_body_id
FROM ${ref('ecf_inductions_dedupe')}
WHERE
-- for future registration windows, the cohort should be updated
  cohort = 2025
  AND participant_type = 'ParticipantProfile::ECT'
  AND training_status != 'withdrawn'
  AND eligible_for_funding = (true or NULL)
)

SELECT 
  ecf1.user_id,
  ecf1.trn,
  users.full_name as ect_name,
  ecf1.school_urn,
  schools.name as school_name,
  ecf1.ab_indicated_on_ecf1,
  ab_regions.hub_region as ab_hub_region,
  school_regions.tsh_area as school_hub_region,
  ecf1.induction_programme_type,
  ecf1.date_ect_registered_ecf1,
  riab.induction_period_created_riab,
  IFNULL(riab.in_riab, false) as in_riab,



FROM ecf1
LEFT JOIN riab ON ecf1.trn = riab.trn
LEFT JOIN ${ref('ecf_schools')} as schools ON ecf1.school_urn = schools.urn
LEFT JOIN ${ref('users_latest_ecf1')} as users on ecf1.user_id = users.id
LEFT JOIN ${ref('establishments')} as gias on ecf1.school_urn = SAFE_CAST(gias.urn as int64)

-- For future registration windows, the following two static tables should be looked at and ensure the mapping is correct
LEFT JOIN ${(ref('tsh_lsoa_lookup_2023'))} as school_regions on gias.lsoa_code = school_regions.lsoa21cd
LEFT JOIN ${ref('ab_to_hub_region_mapping_2025_09_15')} as ab_regions on ecf1.appropriate_body_id = ab_regions.appropriate_body_id

