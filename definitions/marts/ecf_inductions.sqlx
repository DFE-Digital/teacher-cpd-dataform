config {
  type: "table",
  assertions: {
    uniqueKey: ["induction_record_id"]
  },
  bigquery: {
    partitionBy: "DATE(induction_record_created_at)",
    clusterBy: ["cohort"]
  },
  description: "",
  columns: {
    induction_record_id: "ID of individual induction record",
    participant_profile_id: "The table participant_declarations_latest needs to be joined to ecf_inductions using participant_profile_id. Deduplication of user_ids has turned some of them into “ghost” IDs but the participant_profile_id still links correctly. "
  }
}

WITH
  ecf_induction_records AS (
  SELECT
    DISTINCT appropriate_body_id,
    participant_profile_id,
    created_at,
    created_at AS induction_record_created_at,
    end_date,
    id AS induction_record_id,
    induction_programme_id,
    induction_status,
    mentor_profile_id AS mentor_id,
    schedule_id,
    school_transfer,
    start_date,
    training_status,
    updated_at
  FROM
    ${ref("induction_records_latest_cpd")}),
  ecf_induction_programmes AS (
  SELECT
    DISTINCT id AS induction_programme_id,
    partnership_id,
    school_cohort_id,
    training_programme AS induction_programme_type
  FROM
     ${ref("induction_programmes_latest_cpd")}),
  cohort_records AS(
  SELECT
    school_cohort.id AS school_cohort_id,
    default_induction_programme_id,
    name AS school_name,
    start_year,
    urn AS school_urn,
    cohort_id,
    start_year AS cohort,
    school_id
  FROM
     ${ref("school_cohorts_latest_cpd")} school_cohort
  LEFT JOIN
     ${ref("schools_latest_cpd")} as schools
  ON
    school_cohort.school_id=schools.id
  LEFT JOIN
     ${ref("cohorts_latest_cpd")} as cohort
  ON
    school_cohort.cohort_id=cohort.id),
  ecf_participant_profiles AS (
  SELECT
    participant_profiles.id AS participant_profile_id,
    participant_identity_id AS external_id,
    induction_completion_date AS completion_date,
    type AS participant_type,
    teacher_profiles.user_id AS user_id,
    trn AS TRN
  FROM
     ${ref("participant_profiles_latest_cpd")} as participant_profiles
    /* No duplicates for this combination of data at moment, there are duplicates across participant id so could cause problems down the line*/
  LEFT JOIN
     ${ref("teacher_profiles_latest_cpd")} as teacher_profiles
  ON
    participant_profiles.teacher_profile_id=teacher_profiles.id ),
  appropriate_bodies AS (
  SELECT
    id AS appropriate_body_id,
    name AS appropriate_body_name
  FROM
    ${ref("appropriate_bodies_latest_cpd")} as appropriate_bodies),
  pupil_premiums AS (
  SELECT
    school_id AS source_school_id,
    start_year AS source_start_year,
    pupil_premium_incentive AS high_pupil_premium,
    sparsity_incentive,
    (ROW_NUMBER() OVER (PARTITION BY school_id, start_year ORDER BY updated_at DESC)) AS rn1
  FROM
    ${ref("pupil_premiums_latest_cpd")} QUALIFY rn1 = 1),
  induction_programme_details AS (
  SELECT
    *
  FROM
    ecf_induction_programmes
  LEFT JOIN
    cohort_records
  ON
    ecf_induction_programmes.school_cohort_id=cohort_records.school_cohort_id),
  induction_records_full AS (
  SELECT
    induction_record_id,
    external_id,
    ecf_participant_profiles.participant_profile_id,
    ecf_induction_records.induction_programme_id,
    induction_programme_type,
    school_name,
    school_urn,
    schedule_identifier,
    mentor_id,
    appropriate_bodies.appropriate_body_id,
    appropriate_body_name,
    start_date,
    end_date,
    induction_status,
    training_status,
    school_transfer,
    ecf_induction_records.created_at,
    ecf_induction_records.updated_at,
    completion_date,
    induction_programme_details.cohort_id,
    user_id,
    participant_type,
    induction_record_created_at,
    partnership_id,
    TRN,
    cohort,
    school_id,
    high_pupil_premium,
    sparsity_incentive
  FROM
    ecf_induction_records
  LEFT JOIN
    induction_programme_details
  ON
    ecf_induction_records.induction_programme_id=induction_programme_details.induction_programme_id
  LEFT JOIN
    ecf_participant_profiles
  ON
    ecf_induction_records.participant_profile_id = ecf_participant_profiles.participant_profile_id
  LEFT JOIN
    appropriate_bodies
  ON
    ecf_induction_records.appropriate_body_id=appropriate_bodies.appropriate_body_id
  LEFT JOIN
    pupil_premiums
  ON
    cohort = pupil_premiums.source_start_year
    AND school_id = pupil_premiums.source_school_id
  LEFT JOIN `dataform.schedules_latest_cpd` schedules
  ON ecf_induction_records.schedule_id = schedules.id)
SELECT
  *
FROM
  induction_records_full
