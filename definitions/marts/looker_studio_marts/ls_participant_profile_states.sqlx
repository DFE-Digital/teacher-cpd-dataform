config {
    type: "table",
    assertions: {
        uniqueKey: ["id"]
    },
    bigquery: {
        partitionBy: "DATE(created_at)",
        clusterBy: ["state", "reason", "programme", "cpd_lp_name"]
    },
    description: "This mart provides a report that gives the withdrawal/deferall reasons for all participants across NPQ and ECF. This information is provided to users in the CPD Self-Serve Dashboard.",
    columns: {
        participant_profile_id: "ID of each ECT's profile"
    }
}

WITH
  npq_profile_information AS (
  SELECT
    ppsl.*,
    npqe.cohort,
    npqe.schedule_identifier,
    npqlpl.name AS cpd_lp_name,
    CASE
      WHEN ppl.type LIKE '%NPQ' THEN 'NPQ'
  END
    AS participant_type,
    CASE
      WHEN ppl.type LIKE '%NPQ' THEN 'NPQ'
  END
    AS programme,
    (ROW_NUMBER() OVER (PARTITION BY ppsl.participant_profile_id ORDER BY ppsl.created_at DESC)) AS rn1
  FROM
    ${ref(`participant_profile_states_latest_cpd`)} ppsl
  LEFT JOIN
    ${ref(`npq_lead_providers_latest_cpd`)} npqlpl
  USING
    (cpd_lead_provider_id)
  LEFT JOIN
    ${ref(`participant_profiles_latest_cpd`)} ppl
  ON
    ppsl.participant_profile_id = ppl.id
  LEFT JOIN
    ${ref(`npq_enrolments`)} npqe
  USING
    (participant_profile_id) QUALIFY rn1=1),
  ecf_profile_information AS (
  SELECT
    ppsl.*,
    ecfid.cohort,
    ecfid.schedule_identifier,
    lpl.name AS cpd_lp_name,
    CASE
      WHEN ppl.type LIKE '%ECT' THEN 'ECT'
      WHEN ppl.type LIKE '%Mentor' THEN 'Mentor'
  END
    AS participant_type,
    CASE
      WHEN ppl.type LIKE ANY ('%ECT', '%Mentor') THEN 'ECF'
  END
    AS programme,
    (ROW_NUMBER() OVER (PARTITION BY ppsl.participant_profile_id ORDER BY ppsl.created_at DESC)) AS rn1
  FROM
    ${ref(`participant_profile_states_latest_cpd`)} ppsl
  LEFT JOIN
    ${ref(`lead_providers_latest_cpd`)} lpl
  USING
    (cpd_lead_provider_id)
  LEFT JOIN
    ${ref(`participant_profiles_latest_cpd`)} ppl
  ON
    ppsl.participant_profile_id = ppl.id
  LEFT JOIN
    `dataform.ecf_inductions_dedupe` ecfid
  USING
    (participant_profile_id) QUALIFY rn1=1 )
SELECT
  *
FROM
  npq_profile_information
WHERE
  programme = 'NPQ'
  AND state <> 'active'
UNION ALL
SELECT
  *
FROM
  ecf_profile_information
WHERE
  programme = 'ECF'
  AND state <> 'active'
