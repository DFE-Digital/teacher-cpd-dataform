config {
    type: "table",
    assertions: {
        uniqueKey: ["id"]
    },
    bigquery: {
        partitionBy: "DATE(created_at)",
        clusterBy: ["state", "reason", "programme", "cpd_lp_name"]
    },
    description: "This mart provides a report that gives the current training_status for all participants across NPQ and ECF. This information is provided to users in the CPD Self-Serve Dashboard where it is filtered to show only withdrawn or deferred participants and the reason for their withdrawal/deferall. The primary users are the ECF schools team and NPQ Contract Managers.",
    columns: {
        id: "Unique ID of the record being pulled from the participant_profile_states table.",
        created_at: "Timestamp of when the record being pulled from participant_profile_states was created. Since participants can go through different training statuses, only the most recently created record for each participant is pulled.",
        updated_at: "Timestamp of when the record being pulled from participant_profile_states was updated.",
        cpd_lead_provider_id: "ID of the Lead Provider linked to the participant in participant_profile_states.",
        participant_profile_id: "ID of each participant's profile",
        reason: "Explains why a participant is in a certain state.",
        state: "This is the participant's training_status. It can be active, deferred, or withdrawn.",
        last_streamed_event_occurred_at: "Timestamp of when the record  from participant_profile_states was most recently imported or updated",
        last_streamed_event_type: "Whether the most recent event for this record from participant_profile_states was it being imported or updated.",
        cohort: "Participant's cohort from either npq_enrolments or ecf_indcutions_dedupe.",
        schedule_identifier: "Participant's schedule from either npq_enrolments or ecf_indcutions_dedupe.",
        cpd_lp_name: "Name of the Lead Provider linked to the participant in participant_profile_states.",
        participant_type: "Details if a participant is an ECT, Mentor, or NPQ.",
        programme: "Details if a participant is associated with the ECF or NPQ programmes",
    }
}

WITH
  final_table_output AS (
  SELECT
    ppsl.*,
    COALESCE (npqe.cohort, ecfid.cohort) AS cohort,
    COALESCE (npqe.schedule_identifier, ecfid.schedule_identifier) AS schedule_identifier,
    COALESCE (npqlpl.name, lpl.name, npqe.provider_name, ecfid.lead_provider_name) AS cpd_lp_name,
    CASE
      WHEN npqe.participant_profile_id IS NOT NULL THEN 'NPQ'
      WHEN ecfid.participant_type LIKE '%ECT' THEN 'ECT'
      WHEN ecfid.participant_type LIKE '%Mentor' THEN 'Mentor'
  END
    AS participant_type,
    CASE
      WHEN npqe.participant_profile_id IS NOT NULL THEN 'NPQ'
      WHEN ecfid.participant_type LIKE ANY ('%ECT',
      '%Mentor') THEN 'ECF'
  END
    AS programme,
    (ROW_NUMBER() OVER (PARTITION BY ppsl.participant_profile_id ORDER BY ppsl.created_at DESC)) AS rn1
  FROM
    ${ref(`participant_profile_states_latest_cpd`)} ppsl
  LEFT JOIN
    ${ref(`npq_lead_providers_latest_cpd`)} npqlpl
  USING
    (cpd_lead_provider_id)
  LEFT JOIN
    ${ref(`lead_providers_latest_cpd`)} lpl
  USING
    (cpd_lead_provider_id)
  LEFT JOIN
    ${ref(`npq_enrolments`)} npqe
  USING
    (participant_profile_id)
  LEFT JOIN
    ${ref(`ecf_inductions_dedupe`)} ecfid
  USING
    (participant_profile_id) QUALIFY rn1=1)
SELECT
  * EXCEPT(rn1)
FROM
  final_table_output
