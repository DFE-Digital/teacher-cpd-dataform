config {
    type: "incremental",
    assertions: {
        uniqueKey: ["application", "session_id", "pageview_number_in_session", "user_id"],
        rowConditions: ["next_step != page_path"]
    },
    bigquery: {
        partitionBy: "DATE(session_start_timestamp)",
        clusterBy: ["application"]
    },
    description: "Pageviews that occurred on a CPD service, along with details of previous and next steps users took within their session. Sessions defined Google Analytics style from the dfe-analytics-dataform session_details table. Consecutive repeat views of the same grouped page_path have been excluded and counted in number_of_immediate_repeat_pageviews. Intended to support a funnel analysis dashboard.",
    columns: {
        application: "Name of the application that received the request to view this page.",
        session_id: "UID of this session",
        user_id: "ID of the user logged in at some point during this session - if they were. Traffic from separate user_ids is always separated into separate sessions.",
        session_start_timestamp: "Time at which the session began",
        page_path: "Path of the page that was viewed, excluding domain and query string. Blocks of alphanumeric characters containing 3+ digits have been grouped by replacing these blocks with '[grouped]'.",
        referer_path: "Path of the previous page that was viewed, if it was. May be an external site or an internal pageview from a previous session. Not the same as previous_step. Blocks of alphanumeric characters containing 3+ digits have been grouped by replacing these blocks with '[grouped]'.",
        referer_domain: "Domain of the previous page that was viewed, if it was and if this is available. May be an external site or an internal pageview from a previous session.",
        page_entry_time: "Time at which this pageview happened.",
        next_step: "Path of the next page that was viewed on this service within this session, if it was. If it wasn't, contains the string 'End of session'. Blocks of alphanumeric characters containing 3+ digits have been grouped by replacing these blocks with '[grouped]'.",
        next_step_for_display: "next_step optimised for display in Sankey diagrams in Looker Studio",
        first_step: "Path of the first page that was viewed in the session this pageview falls within. Blocks of alphanumeric characters containing 3+ digits have been grouped by replacing these blocks with '[grouped]'.",
        last_step: "Path of the last page that was viewed in the session this pageview falls within. Blocks of alphanumeric characters containing 3+ digits have been grouped by replacing these blocks with '[grouped]'.",
        previous_step: "Path of the previous page that was viewed on this service *within this session*, if it was. If it wasn't, contains the string 'End of session'. Not the same as referer_path. Blocks of alphanumeric characters containing 3+ digits have been grouped by replacing these blocks with '[grouped]'.",
        pageview_number_in_session: "Number indicating that this pageview was the Nth pageview within this session.",
        time_on_page: "Number of seconds between page_entry_time and the page_entry_time of the next pageview which is not the same grouped page_path if it exists. NULL otherwise.",
        number_of_immediate_repeat_pageviews: "Number of views of the same grouped page_path within this session which took place with no views of any other grouped page_paths in between.",
        admin_session: "TRUE if this user was an internal DfE admin user, deduced from whether they viewed any page path containing 'admin' at any point in the session.",
        session_utm_source: "Value of the utm_source UTM parameter for the first pageview in the session, if it was set. Useful to categorise traffic for marketing purposes.",
        session_utm_medium: "Value of the utm_medium UTM parameter for the first pageview in the session, if it was set. Useful to categorise traffic for marketing purposes.",
        session_utm_campaign: "Value of the utm_campaign UTM parameter for the first pageview in the session, if it was set. Useful to categorise traffic for marketing purposes.",
        funnels: "Array of strings listing the funnel(s) this step was a part of, if any."
    }
}

js {
    /* Specify new funnels to appear on the pre-set funnels dashboard here. */
    /* Ensure funnelPaths are listed in order in the user journey. */
    /* This JavaScript object will be looped through further on in the query in order to generate the funnels array of strings listing the funnel(s) each pageview was a part of, if any. */
    const funnels = [{
            name: "Register for an NPQ - stage 1 (user information)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/teacher-reference-number",
                "/registration/qualified-teacher-check",
                "/registration/course-start-date",
                "/registration/provider-check",
                "/registration/teacher-catchment",
                "/registration/work-setting"
            ],
            sidePaths: [{
                path: "/registration/dqt-mismatch",
                nextStep: "/registration/course-start-date"
            }, ]
        },
        {
            name: "Register for an NPQ - stage 2a (work setting - school, trust, 16-19 setting or other)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/work-setting",
                "/registration/find-school",
                "/registration/choose-school"
            ],
            sidePaths: [{
                path: "/registration/referred-by-return-to-teaching-adviser",
                nextStep: "/registration/choose-your-npq"
            }, ]
        },
        {
            name: "Register for an NPQ - stage 2b (early years or childcare)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/kind-of-nursery",
                "/registration/find-childcare-provider",
                "/registration/choose-childcare-provider"
            ],
            sidePaths: [{
                    path: "/registration/have-ofsted-urn",
                    nextStep: "/registration/choose-your-npq"
                },
                {
                    path: "/registration/have-ofsted-urn",
                    nextStep: "/registration/choose-private-childcare-provider"
                },
                {
                    path: "/registration/choose-private-childcare-provider",
                    nextStep: "/registration/choose-your-npq"
                }
            ]
        },
        {
            name: "Register for an NPQ - stage 2c (another setting)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/your-employment",
                "/registration/your-role",
                "/registration/your-employer"
            ],
            sidePaths: [{
                    path: "/registration/your-employment",
                    nextStep: "/registration/itt-provider"
                },
                {
                    path: "/registration/itt-provider",
                    nextStep: "/registration/choose-your-npq"
                },
            ]
        },
        {
            name: "Register for an NPQ - stage 3a (NPQ choice - general & SENCO in role)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/choose-your-npq",
                "/registration/ineligible-for-funding",
                "/registration/funding-your-npq"
            ],
            sidePaths: [{
                    path: "/registration/possible-funding",
                    nextStep: "/registration/choose-your-provider"
                },
                {
                    path: "/registration/senco-in-role",
                    nextStep: "/registration/ineligible-for-funding"
                },
                {
                    path: "/registration/senco-in-role",
                    nextStep: "/registration/possible-funding"
                },
                {
                    path: "/registration/senco-in-role",
                    nextStep: "/registration/senco-start-date"
                },
                {
                    path: "/registration/senco-in-role",
                    nextStep: "/registration/funding-eligibility-senco"
                },
                {
                    path: "/registration/funding-eligibility-senco",
                    nextStep: "/registration/choose-your-provider"
                }
            ]
        },
        {
            name: "Register for an NPQ - stage 3b (NPQ choice - early headship coaching)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/npqh-status",
                "/registration/ehco-headteacher",
                "/registration/ehco-new-headteacher",
                "/registration/ehco-funding-not-available",
                "/registration/funding-your-ehco"
            ]
        },
        {
            name: "Register for an NPQ - stage 3c (NPQ choice - leading primary mathematics)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/maths-eligibility-teaching-for-mastery",
                "/registration/finding-eligibility-maths"
            ]
        },
        {
            name: "Register for an NPQ - stage 4 (finalising registration)",
            application: "Apply for a National Professional Qualification",
            funnelPaths: [
                "/registration/choose-your-provider",
                "/registration/share-provider",
                "/registration/check-answers"
            ]
        },
        {
            name: "New school adding a School Induction Tutor (SIT)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/nominations/choose-how-to-continue",
                "/nominations/start-nomination",
                "/nominations/full-name",
                "/nominations/email",
                "/nominations/check-details"
            ]
        },
        {
            name: "School confirming ECT(s), AB(s) & programme choice - stage 1",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/cohorts/[grouped]/setup",
                "/schools/[grouped]/cohorts/[grouped]/setup/expect-any-ects",
                "/schools/[grouped]/cohorts/[grouped]/setup/how-will-you-run-training",
                "/schools/[grouped]/cohorts/[grouped]/setup/programme-confirmation"
            ],
            sidePaths: [{
                    path: "/schools/[grouped]/cohorts/[grouped]/setup/providers-relationship-has-changed",
                    nextStep: "/schools/[grouped]/cohorts/[grouped]/setup/what-changes"
                },
                {
                    path: "/schools/[grouped]/cohorts/[grouped]/setup/keep-providers",
                    nextStep: "/schools/[grouped]/cohorts/[grouped]/setup/what-changes"
                },
                {
                    path: "/schools/[grouped]/cohorts/[grouped]/setup/what-changes",
                    nextStep: "/schools/[grouped]/cohorts/[grouped]/setup/what-changes-confirmation"
                },
                {
                    path: "/schools/[grouped]/cohorts/[grouped]/setup/what-changes-confirmation",
                    nextStep: "/schools/[grouped]/cohorts/[grouped]/setup/appropriate-body-appointed"
                }
            ]
        },
        {
            name: "School confirming ECT(s), AB(s) & programme choice - stage 2",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/cohorts/[grouped]/setup/programme-confirmation",
                "/schools/[grouped]/cohorts/[grouped]/setup/appropriate-body-appointed"
            ],
            sidePaths: [{
                    path: "/schools/[grouped]/cohorts/[grouped]/setup/what-changes-confirmation",
                    nextStep: "/schools/[grouped]/cohorts/[grouped]/setup/appropriate-body-appointed"
                },
                {
                    path: "/schools/[grouped]/cohorts/[grouped]/setup/appropriate-body",
                    nextStep: "/schools/[grouped]/cohorts/[grouped]/setup/complete"
                }
            ]
        },
        {
            name: "School adding or transferring an ECT or Mentor - stage 1",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/who",
                "/schools/[grouped]/participants/who/what-we-need",
                "/schools/[grouped]/participants/who/name",
                "/schools/[grouped]/participants/who/trn",
                "/schools/[grouped]/participants/who/date-of-birth"
            ]
        },
        {
            name: "School adding or transferring an ECT or Mentor - stage 2a (new ECT or Mentor only)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/add",
                "/schools/[grouped]/participants/add/choose-mentor",
                "/schools/[grouped]/participants/add/confirm-appropriate-body",
                "/schools/[grouped]/participants/add/check-answers",
                "/schools/[grouped]/participants/add/complete"
            ],
            sidePaths: [{
                    path: "/schools/[grouped]/participants/add/email",
                    nextStep: "/schools/[grouped]/participants/add/check-answers"
                },
                {
                    path: "/schools/[grouped]/participants/add/appropriate-body",
                    nextStep: "/schools/[grouped]/participants/add/check-answers"
                }
                /* TODO: Loads of traffic to /schools/[grouped]/participants/add/start-term from /schools/[grouped]/participants/add . What is this? */
            ]
        },
        {
            name: "School adding or transferring an ECT or Mentor - stage 2b (transfers only)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/who/confirm-transfer",
                "/schools/[grouped]/participants/transfer"
            ],
            sidePaths: [{
                    path: "/schools/[grouped]/participants/who/confirm-mentor-transfer",
                    nextStep: "/schools/[grouped]/participants/transfer"
                },
                {
                    path: "/schools/[grouped]/participants/joining-date",
                    nextStep: "/schools/[grouped]/participants/transfer/email"
                }
            ]
        }, {
            name: "School adding or transferring an ECT or Mentor - stage 2c (DQT failure TRN + DOB match but mismatched name)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/who/known-by-another-name",
                "/schools/[grouped]/participants/who/different-name",
                "/schools/[grouped]/participants/who/cannot-add-mismatch"
            ],
            sidePaths: [{
                path: "/schools/[grouped]/participants/who/cannot-add-mismatch"
            }, ]
        },
        {
            name: "School adding or transferring an ECT or Mentor - stage 2d (DQT failure TRN or DOB do not match)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/who/cannot-find-their-details",
                "/schools/[grouped]/participants/who/nino",
                "/schools/[grouped]/participants/who/still-cannot-find-their-details"
            ],
            sidePaths: [{
                path: "/schools/[grouped]/participants/who/name/change"
            }, {
                path: "/schools/[grouped]/participants/who/date-of-birth/change"
            }, {
                path: "/schools/[grouped]/participants/who/trn/change"
            }]
        },
        {
            name: "School adding or transferring an ECT or Mentor - stage 2e (School doesnt have a training programme for the participant to join)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/who/need-training-setup",
                "/schools/[grouped]/cohorts/[grouped]/setup"
            ],
            sidePaths: [{
                path: "/schools/[grouped]/cohorts/[grouped]/choose-programme"
            }, ]
        },
        {
            name: "School adding or transferring an ECT or Mentor - stage 3b (transfers only)",
            application: "Manage Training for Early Career Teachers",
            funnelPaths: [
                "/schools/[grouped]/participants/transfer/email",
                "/schools/[grouped]/participants/transfer/choose-mentor",
                "/schools/[grouped]/participants/transfer/continue-current-programme",
                "/schools/[grouped]/participants/transfer/join-school-programme",
                "/schools/[grouped]/participants/transfer/choose-mentor",
                "/schools/[grouped]/participants/transfer/check-answers"
            ],
            sidePaths: [{
                path: "/schools/[grouped]/participants/transfer/cannot-add-manual-transfer",
                nextStep: "/support"
            }, ]
        },
        {
            name: "Claim an Early Career Teacher (ECT)",
            application: "Register Early Career Teachers",
            funnelPaths: [
                "/appropriate-body/claim-an-ect/find-ect/new",
                "/appropriate-body/claim-an-ect/check-ect/[grouped]/edit",
                "/appropriate-body/claim-an-ect/register-ect/[grouped]/edit",
                "/appropriate-body/claim-an-ect/register-ect/[grouped]"
            ]
        },
        {
            name: "Release an Early Career Teacher (ECT)",
            application: "Register Early Career Teachers",
            funnelPaths: [
                "/appropriate-body/teachers/[grouped]/release/new",
                "/appropriate-body/teachers/[grouped]/release"
            ]
        },
        {
            name: "Record a passed outcome",
            application: "Register Early Career Teachers",
            funnelPaths: [
                "/appropriate-body/teachers/[grouped]/record-passed-outcome/new",
                "/appropriate-body/teachers/[grouped]/record-passed-outcome"
            ]
        },
        {
            name: "Record a failed outcome",
            application: "Register Early Career Teachers",
            funnelPaths: [
                "/appropriate-body/teachers/[grouped]/record-failed-outcome/new",
                "/appropriate-body/teachers/[grouped]/record-failed-outcome"
            ]
        },
        {
            name: "Extend an Early Career Teacher (ECT)'s induction period",
            application: "Register Early Career Teachers",
            funnelPaths: [
                "/appropriate-body/teachers/[grouped]/extensions",
                "/appropriate-body/teachers/[grouped]/extensions/new"
            ],
            sidePaths: [{
                path: "/appropriate-body/teachers/[grouped]/extensions/[grouped]/edit",
                nextStep: "/appropriate-body/teachers/[grouped]"
            }, ]
        },
    ];
}

WITH
  sessions AS (
  SELECT
    "Manage Training for Early Career Teachers" AS application,
    *
  FROM
    ${ref("session_details_ecf1")}
  WHERE
    session_start_timestamp > session_timestamp_checkpoint
  UNION ALL (
    SELECT
      "Register Early Career Teachers" AS application,
      *
    FROM
      ${ref("session_details_ecf2")}
    WHERE
      session_start_timestamp > session_timestamp_checkpoint )
  UNION ALL (
    SELECT
      "Apply for a National Professional Qualification" AS application,
      *
    FROM
      ${ref("session_details_npq")}
    WHERE
      session_start_timestamp > session_timestamp_checkpoint ) )
SELECT
  application,
  session_id,
  user_id,
  session_start_timestamp,
  pageview.*,
  next_step AS next_step_for_display,
  utm_source AS session_utm_source,
  utm_medium AS session_utm_medium,
  utm_campaign AS session_utm_campaign,
  ARRAY(
  /* Construct the array of funnels (strings) which this pageview is part of from a subquery. */
  SELECT
    funnel
  FROM (
  /* Loop through the funnels JS array of funnel objects and generate a small subquery containing the funnel name, */
  /* application & next_step_is_in_this_funnel boolean for each one, separated by a UNION ALL. */
  /* At this stage the subquery includes *all* funnels for all pages regardless of whether this page path was in the funnel; funnels this pageview is not in are excluded with a WHERE clause afterwards. */
  ${
      funnels.map(funnel =>
          `SELECT "${funnel.name}" AS funnel,
                  application = "${funnel.application}"
                  AND (
                      /* Loop through the funnelPaths array of path strings within each funnel object and generate a WHERE clause for each one, separated by an OR */
                      ${funnel.funnelPaths.map((path, index) => {
                          /* Exclude backward steps */
                          return `(
                          page_path = "${path}"
                          ${index > 0 ?
                              `AND next_step NOT IN ("${funnel.funnelPaths.slice(0, index).join('", "')}")`
                          : ''}
                      )`
                      }).join('\n OR \n')}
                      /* If sidePaths exists for this funnel, loop through the sidePaths array of sidePath objects within each funnel object and generate a WHERE clause for each one, separated by an OR */
                      ${funnel.sidePaths ? funnel.sidePaths.map((sidePath, index) => {
                          /* Include additional paths that aren't part of the main funnel in funnelPaths (but not onward steps from them) */
                          return ` OR (
                          page_path = "${sidePath.path}"
                          AND next_step = "${sidePath.nextStep}"
                      )`
                      }).join('\n') : []}
                  )
                  /* If sidePath exists for this funnel, loop through the sidePaths array of sidePath objects within each funnel object and generate a WHERE NOT clause for each one, separated by an OR */
                  ${funnel.sidePaths ? `AND NOT (
                      ${funnel.sidePaths.map((sidePath, index) => {
                          /* Exclude backwards steps along sidePaths */
                          return `(
                          page_path = "${sidePath.nextStep}"
                          AND next_step = "${sidePath.path}"
                      )`
                      }).join('\n OR \n')}
                  )` : ``}
                  AS next_step_is_in_this_funnel
          `).join(`\nUNION ALL\n`)
  }
  )
  WHERE
    next_step_is_in_this_funnel) AS funnels
FROM
  sessions,
  UNNEST(ARRAY(
    /* *After* all these calculations are complete, the QUALIFY at the end of this subquery excludes pageviews which are repeat pageviews of the previous pageview in the session. */
    /* Before this is done, next_step and time_on_page are recalculated so that they are the correct value despite this. */
    SELECT
      AS STRUCT
        * EXCEPT(time_on_page, next_page_entry_time, next_step_has_same_page_path, previous_step_has_same_page_path, next_step),
        /* If this is a view in a set of repeat pageviews, set next_step to the next step after the set of repeat pageviews, not the next step of this pageview (which might just be the same page) */
        CASE
            WHEN next_step_has_same_page_path IS TRUE THEN FIRST_VALUE(IF(next_step_has_same_page_path IS FALSE, next_step, NULL) IGNORE NULLS) OVER future_pageviews_with_same_page_path_in_order
            ELSE next_step
        END AS next_step,
        /* If this is a view in a set of repeat pageviews, set number_of_immediate_repeat_pageviews to the total number of repeat pageviews between this one and the next pageview not in the set. */
        /* In practise this will be the total number of pageviews in the set because pageviews midway through the set will be excluded by the QUALIFY at the end of the subquery. */
        CASE
            WHEN next_step_has_same_page_path IS TRUE THEN
                1 + IFNULL(MIN(IF(next_step_has_same_page_path IS FALSE, pageview_number_in_session, NULL)) OVER future_pageviews_with_same_page_path_in_order - pageview_number_in_session, 0)
            ELSE 1
        END AS number_of_immediate_repeat_pageviews,
        /* If this is a view in a set of repeat pageviews, set time_on_page to the total time for all the repeat pageviews in the set, not just this one. */
        CASE
            WHEN next_step_has_same_page_path IS TRUE THEN
                TIMESTAMP_DIFF(MIN(IF(next_step_has_same_page_path IS FALSE, next_page_entry_time, NULL)) OVER future_pageviews_with_same_page_path_in_order, page_entry_time, SECOND)
            ELSE time_on_page
        END AS time_on_page
    FROM (
        SELECT
        AS STRUCT
        /* Initial calculations with analytic functions here serve various purposes, including enabling outer subqueries to tell whether this pageview is a repeat pageview of the previous pageview in the session via previous_step_has_same_page_path */
            page_path,
            referer_path,
            page_entry_time,
            IFNULL(LEAD(page_path) OVER pageviews_in_order, "End of session") AS next_step,
            LEAD(page_entry_time) OVER pageviews_in_order AS next_page_entry_time,
            IFNULL(LAG(page_path) OVER pageviews_in_order, "Start of session") AS previous_step,
            FIRST_VALUE(page_path) OVER pageviews_in_order AS first_step,
            LAST_VALUE(page_path) OVER pageviews_in_order AS last_step,
            ROW_NUMBER() OVER pageviews_in_order AS pageview_number_in_session,
            referer_domain,
            time_on_page,
            LOGICAL_OR(CONTAINS_SUBSTR(page_path, "/admin")) OVER pageviews_in_order AS admin_session,
            IFNULL(LEAD(page_path) OVER pageviews_in_order = page_path, FALSE) AS next_step_has_same_page_path,
            IFNULL(LAG(page_path) OVER pageviews_in_order = page_path, FALSE) AS previous_step_has_same_page_path
        FROM (
            /* pages_visited_details is an array of STRUCTs, one for each pageview within a session.*/
            /* This subquery replaces UID page path components in page and referer paths with the string "[grouped]" so that paths which are essentially the same are displayed as being the same in funnel analysis dashboards */
            /* UID page path components are defined as whole page path components (between two /s or between a / and the end of the page path) which either contain only numbers, or contain at least 1 number, only letters or hyphens (-) as other characters, and 4 or more characters in total */
            SELECT
                ${functions.contentGroupPath("page")} AS page_path,
                ${functions.contentGroupPath("previous_page")} AS referer_path,
                page_entry_time,
                previous_page_domain AS referer_domain,
                duration AS time_on_page,
                application,
                session_id
            FROM
                UNNEST(pages_visited_details)
        )
        WINDOW
        pageviews_in_order AS (
        PARTITION BY
            application,
            session_id
        ORDER BY
            page_entry_time ASC))
    QUALIFY
        previous_step_has_same_page_path IS NOT TRUE
    WINDOW
        future_pageviews_with_same_page_path_in_order AS (
        PARTITION BY
            application,
            session_id,
            page_path
        ORDER BY
            page_entry_time ASC
        ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING)
    )) AS pageview

pre_operations {
  DECLARE
    session_timestamp_checkpoint DEFAULT (
    ${
        when(incremental(),
            `SELECT MAX(session_start_timestamp) FROM ${self()}`,
            `SELECT TIMESTAMP("2000-01-01")`)
    }
    )
}