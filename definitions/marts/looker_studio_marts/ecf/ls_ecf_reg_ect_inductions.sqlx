config {
    type: "table",
    assertions: {},
    bigquery: {
        partitionBy: "DATE(created_at)",
        clusterBy: ["cohort"]
    },
    description: "This mart pulls together all ECT induction records generated within May - October (the wider 'registration' period) from 2022 onwards and pairs them with the details of the mentor they were assigned to. It feeds into the Looker Studio 2024 ECF Registration Dashboard and informs ECT metrics. Induction records outside of the registration window are excluded because they don't reflect activity that occurred in registration. There are three marts that inform participants registered within the annual registration windows: ECT_inductions, Mentor_inductions and Participant_inductions. There are three as they have different fields and cannot be amalgamated into a single mart. They utilise a similar structure logic and are dependent on induction records",
    columns: {}
}

WITH
    -- #This table generates a list of the dates from May - October in each approximate registration window (May - October) #
  registration_dates AS (
SELECT
  *
FROM (
  SELECT
    DISTINCT(start_year) AS reg_year,
    CAST(CONCAT(start_year,'-05-01') AS date) AS reg_start_date,
    CAST(CONCAT(start_year,'-10-31') AS date) AS reg_end_date
  FROM
    `dataform.cohorts_latest_cpd`
   WHERE start_year != 2021) AS start_years
CROSS JOIN
  UNNEST( GENERATE_DATE_ARRAY(reg_start_date, reg_end_date, INTERVAL 1 DAY) ) AS join_date),
  --   # This query uses an inner join between ecf_inductions and the registration dates above, the join automatically filters induction records to only those generated during the periods set out above. The records are filtered to ECTs only #
  ect_inductions_reg_period AS (
SELECT
  inductions.*,
  reg_dates.*,
  profiles.cohort_changed_after_payments_frozen
FROM
  `dataform.ecf_inductions` inductions
INNER JOIN
  registration_dates reg_dates
ON
  DATE(inductions.created_at) =reg_dates.join_date
LEFT JOIN
  `dataform.participant_profiles_latest_cpd` profiles
ON
  inductions.participant_profile_id = profiles.id
WHERE
  participant_type ='ParticipantProfile::ECT'
ORDER BY
  join_date DESC,
  participant_profile_id DESC),
  --   # This query pulls key fields for mentors so that we can categorize the type of mentors ECTs are assigned to. Cohort has been pulled from induction records and not the participant profile to ensure the latest cohort for a given participant is reflected and not the cohort stamped on the participant profile when it was generated #
  mentor_profiles AS (
SELECT
  profiles.id as participant_profile_id,
  profiles.mentor_completion_date,
  dedupe.cohort,
  profiles.cohort_changed_after_payments_frozen
FROM
  `dataform.participant_profiles_latest_cpd` profiles
LEFT JOIN
  `dataform.ecf_inductions_dedupe` dedupe
ON
  profiles.id = dedupe.participant_profile_id),
  -- # This table joins ECT inductions records with their corresponding associated mentor's details.  #
  ect_reg_with_mentors AS (
SELECT
  ects.induction_record_id,
  ects.participant_profile_id,
  'ECT' AS participant_course,
  ects.cohort,
  ects.user_id,
  ects.school_id,
  ects.schedule_identifier,
  ects.mentor_id,
  ects.created_at,
  ects.start_date,
  ects.end_date,
  ects.school_transfer,
  --   # This window statement pull the previous induction record prior to this induction record being generated to determine the school_id of the prior record#
  LEAD(ects.school_id) OVER (PARTITION BY ects.participant_profile_id ORDER BY ects.join_date DESC) AS previous_school_id,
  ects.induction_status,
  ects.training_status,
  ects.completion_date,
  ects.participant_type,
  ects.reg_year,
  ects.reg_start_date,
  ects.reg_end_date,
  --   # This translates the null values from the field into falses to permit the use of booleans in dashboards#
  CASE
    WHEN ects.cohort_changed_after_payments_frozen IS NULL THEN FALSE
  ELSE
  ects.cohort_changed_after_payments_frozen
END
  AS ect_21,
  mentors.cohort AS mentor_cohort,
  mentors.mentor_completion_date AS mentor_completion_date,
  --   # This translates the null values from the field into falses to permit the use of booleans in dashboards#
  CASE
    WHEN mentors.cohort_changed_after_payments_frozen IS NULL THEN FALSE
  ELSE
  mentors.cohort_changed_after_payments_frozen
END
  AS mentor_21
FROM
  ect_inductions_reg_period ects
LEFT JOIN
  mentor_profiles mentors
ON
  ects.mentor_id = mentors.participant_profile_id)

-- # This adds flags to the final output that can be filtered on in the looker studio dashboard#
SELECT
  *,
  -- #This checks if this ECT induction record is the first induction record for a given participant within the school + reg_year combination#
  CASE
    WHEN MIN(created_at) OVER (PARTITION BY participant_profile_id, school_id, reg_year) = created_at THEN TRUE
  ELSE
  FALSE
END
  AS min_created_record,
  -- #This checks if this ECT induction record is the last induction record for a given participant within the + school + reg_year combination#
  CASE
    WHEN MAX(created_at) OVER (PARTITION BY participant_profile_id, school_id, reg_year) = created_at THEN TRUE
  ELSE
  FALSE
END
  AS max_created_record,
  -- #This checks if this ECT induction record represents transferring into a new school because this record has a different school_id than previous induction record had#
  CASE
    WHEN previous_school_id != school_id THEN TRUE
  ELSE
  FALSE
END
  AS transfer_in,
  -- #This checks if this ECT induction record falls within the registration period that aligns with their cohort, filters are in place in the looker studio dashboard to weed out cases where they are participants that have rolled over from 2021#
  CASE
    WHEN cohort = reg_year THEN TRUE
  ELSE
  FALSE
END
  AS matched_cohort_reg_year,
  CASE
    WHEN mentor_id IS NULL THEN 'No Mentor Assigned'
  ELSE
  'Mentor Assigned'
END
  AS assigned_mentor_status,
  -- #This case statement determines the kind of mentor an ECT has and whether the mentor is part of a prior cohort or finished training before this ECT induction record was generated#
  CASE
    WHEN mentor_id IS NULL THEN 'No Mentor Assigned'
    WHEN mentor_completion_date IS NOT NULL
  AND mentor_completion_date < DATE(created_at) THEN 'Completed Mentor'
    WHEN mentor_21 IS TRUE THEN 'Mentor training in prior cohort'
    WHEN mentor_cohort = cohort THEN 'Mentor from same cohort'
  ELSE
  'Mentor training in prior cohort'
END
  AS mentor_type,
  -- #This moves the created at date into the relevant exact registration windows for that year#
  CASE
    WHEN created_at < '2022-05-10' AND reg_year = 2022 THEN '2022-05-10'
    WHEN created_at < '2023-06-05'
  AND reg_year = 2023 THEN '2023-06-05'
    WHEN created_at < '2024-06-17' AND reg_year = 2024 THEN '2024-06-17'
  ELSE
  cast(created_at as date)
END
  AS adjusted_creation_date
FROM
  ect_reg_with_mentors

