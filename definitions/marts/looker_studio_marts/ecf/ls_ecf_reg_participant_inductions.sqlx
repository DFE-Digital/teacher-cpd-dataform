config {
    type: "table",
    assertions: {},
    bigquery: {
        partitionBy: "DATE(created_at)",
        clusterBy: ["cohort"]
    },
    description: "This mart pulls together all ECT & Mentor induction records generated within the registration periods from 2022 onwards. It feeds into the Looker Studio 2024 ECF Registration Dashboard and informs combined participant graphs. Induction records outside of the registration window are excluded because they don't reflect activity that occurred in registration. There are three marts that inform participants registerred within the annual registration windows: ECT_inductions, Mentor_inductions and Participant_inductions. There are three as they have different fields and cannot be amalgamated into a single mart. They utilise a similar structure logic and are dependent on induction records",
    columns: {}
}

WITH
    -- #This table generates a list of the dates from May - October in each approximate registration window (May - October) #
  registration_dates AS (
SELECT
  *
FROM (
  SELECT
    DISTINCT(start_year) AS reg_year,
    CAST(CONCAT(start_year,'-05-01') AS date) AS reg_start_date,
    CAST(CONCAT(start_year,'-10-31') AS date) AS reg_end_date
  FROM
    `dataform.cohorts_latest_cpd`
  WHERE start_year != 2021 ) AS start_years
CROSS JOIN
  UNNEST( GENERATE_DATE_ARRAY(reg_start_date, reg_end_date, INTERVAL 1 DAY) ) AS join_date),
  -- # This table uses an inner join between ecf_inductions and the registration dates above, the join automatically filters induction records to only those generated during the periods set out above.#
  reg_inductions AS (
SELECT
  inductions.induction_record_id,
  inductions.participant_profile_id,
  inductions.participant_type,
  inductions.cohort,
  inductions.user_id,
  inductions.school_id,
  inductions.created_at,
    CASE
    WHEN participant_type = 'ParticipantProfile::ECT' THEN CONCAT(reg_year,'-ECT')
  ELSE
  CONCAT(reg_year,'-Mentor')
END
  AS participant_course,
  reg_dates.reg_year,
  reg_dates.reg_start_date,
  reg_dates.reg_end_date,
  --  # This translates the null values from the field into falses to permit the use of booleans in dashboards#
  CASE
    WHEN profiles.cohort_changed_after_payments_frozen IS NULL THEN FALSE
  ELSE
  profiles.cohort_changed_after_payments_frozen
END
  AS cohort_21_fix
FROM
  `dataform.ecf_inductions` inductions
INNER JOIN
  registration_dates reg_dates
ON
  DATE(inductions.created_at) =reg_dates.join_date
LEFT JOIN
  `dataform.participant_profiles_latest_cpd` profiles
ON
 inductions.participant_profile_id = profiles.id)


-- # This adds flags to the final output that can be filtered on in the looker studio dashboard#
SELECT
  reg_inductions.*,
  -- #This checks if this induction record is the first induction record for a given participant + school + reg_year combination#
  CASE
    WHEN MIN(reg_inductions.created_at) OVER (PARTITION BY participant_profile_id, reg_inductions.school_id, reg_year) = reg_inductions.created_at THEN TRUE
  ELSE
  FALSE
END
  AS min_created_record,
  -- #This checks if this induction record is the last induction record for a given participant + school + reg_year combination#
  CASE
    WHEN MAX(reg_inductions.created_at) OVER (PARTITION BY participant_profile_id, reg_inductions.school_id, reg_year) = reg_inductions.created_at THEN TRUE
  ELSE
  FALSE
END
  AS max_created_record,
  -- #This checks if this induction record falls within the registration period that aligns with their cohort, filters are in place in the looker studio dashboard to weed out cases where they are participants that have rolled over from 2021#
  CASE
    WHEN cohort = reg_year THEN TRUE
  ELSE
  FALSE
END
  AS matched_cohort_reg_year,
  -- #This moves the created at date into the relevant registration windows for that year#
  CASE
    WHEN reg_inductions.created_at < '2022-05-10' AND reg_year = 2022 THEN '2022-05-10'
    WHEN reg_inductions.created_at < '2023-06-05'
  AND reg_year = 2023 THEN '2023-06-05'
    WHEN reg_inductions.created_at < '2024-06-17' AND reg_year = 2024 THEN '2024-06-17'
  ELSE
  cast(reg_inductions.created_at as date)
END
  AS adjusted_creation_date
FROM
  reg_inductions
