config {
    type: "table",
    bigquery: {
        partitionBy: "DATE(occurred_at)",
        clusterBy: ["lead_provider_name", "state", "voided_by_finance_tool", "finance_cohort_name"]
    },
    description: "",
    columns: {
        occurred_at: "",
        declaration_id: "",
        state: "",
        voided_at: "",
        voided_by_user_id: "",
        cpd_lead_provider_id: "",
        participant_profile_id: "",
        lead_provider_name: "",
        voided_by_finance_tool: "",
        statement_cohort: ""
    }
}
 WITH voided_paid_declarations AS (
   SELECT id as declaration_id,
   cpd_lead_provider_id,
   declaration_date,
   participant_profile_id,
   state,
   declaration_type,
   course_identifier,
   voided_at,
   voided_by_user_id   
   ,IF
      (voided_at IS NOT NULL
        AND voided_by_user_id IS NOT NULL, TRUE, FALSE) AS voided_by_finance_tool
   FROM ${ref('participant_declarations_latest_cpd')}
   -- Filtering for the following states as are specifically looking at cases where money has exchanged hands
   WHERE state IN ('awaiting_clawback','clawed_back')
   QUALIFY ROW_NUMBER() OVER (PARTITION BY id ORDER BY updated_at DESC )=1 )

SELECT vpd.*,cpd_lp.name as lead_provider_name, ls_declarations.statement_cohort
FROM voided_paid_declarations as vpd
LEFT JOIN ${ref(`cpd_lead_providers_latest_cpd`)}  as cpd_lp
ON vpd.cpd_lead_provider_id = cpd_lp.id
LEFT JOIN  ${ref(`ls_declarations_provider_names`)} as ls_declarations
ON vpd.declaration_id = ls_declarations.id

