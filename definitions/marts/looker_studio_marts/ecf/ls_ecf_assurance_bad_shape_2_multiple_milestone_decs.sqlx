config {
    type: "table",
    tags: ["assurance bad shapes"],
    assertions: {
        uniqueKey: ["declaration_id"]
    },
    bigquery: {
        labels: {
            purpose: "assurance"
        },
        partitionBy: "DATE(declaration_date)",
        clusterBy: ["cpd_lead_provider_name", "participant_profile_id"]
    },
    description: "This is #2 in a series of Assurance 'Bad Shapes' marts that identify declarations received that fall outside the expected declaration rules. This mart identifies declarations that were received in the same milestone period as the declaration date of another declaration for the same participant. It distinguishes between multiple declarations received on the first or last day of milestone period, which possibly indicates an acceptable dummy date, and multiple declarations received after day 1 of milestone period and before final day of milestone period. Declarations are excluded if they are one of multiples received on a dummy date. Only participants with a current cohort of 2023 or later are included",
    columns: {
        declaration_id: 'ID associated with the declaration which qualifies as falling into a bad shape',
        declaration_type: 'The type of the declaration which indicates how far along a participant is in their training',
        declaration_created_at_date: 'The date the declaration was submitted, this field is only relevant to determine which sequence should be applied, it is not used to compare declarations against each other',
        declaration_date: 'The date the declaration was evidenced, when the participant qualified to be declared against. This field is key for determining where a declaration falls in relation to other declarations because it relates to when in the participants training it was evidenced',
        participant_profile_id: "ID of each participant's profile.",
        state: 'The financial state of the declaration - whether it has been paid yet or not and whether it is eligible for funding - only paid, payable and eligible declarations are relevant for bad shapes checks',
        cpd_lead_provider_name: 'The name of the lead provider that submitted the declaration',
        statement_id: 'The associated financial statement the declaration was included on',
        schedule_identifier: 'The training schedule of the participant - this indicates when they started on the programme and whether they followed a standard pattern of training. Reduced schedules do not have to have a started declaration and their completed declaration can be submitted at any point because they do not have to complete the full length of training',
        participant_type: 'Whether the participant is an ECT or a mentor',
        cohort: 'The cohort on the participants latest induction record. This may not be the cohort they commenced training on. This mart only includes participants from cohorts from 2023 onwards, however declarations from prior cohorts are used for the bad shape calculation.',
        statement_cohort: 'This is the cohort the declaration was submitted against. This might not match the participants induction cohort because the participant may have been rolled onto a new cohort since this declaration was submitted. ',
        trn: {
            description: "TRN associated with the ECT's profile.",
            bigqueryPolicyTags: ["projects/ecf-bq/locations/europe-west2/taxonomies/6302091323314055162/policyTags/301313311867345339"]
        },
        milestone_start: 'The first date of the milestone the declaration date of the declaration falls within',
        milestone_end: 'The last date of the milestone the declaration date of the declaration falls within',
        days_from_start: 'The number of days between the declaration date and the start of the milestone period',
        first_day: 'Boolean check to confirm whether the declaration date matches the first date of the milestone period',
        days_from_end: 'The number of days between the declaration date and the end of the milestone period',
        last_day: 'Boolean check to confirm whether the declaration date matches the last date of the milestone period',
        participant_declarations_evidenced_in_milestone: 'Count of the number of declarations evidenced for a participant within the milestone period'
    }
}

  /* This identifies declarations received for a participant and induction details from their latest induction record. It then determines where in a milestone period a declaration falls based on declaration date and whether it falls on the first or last date of a milestone period to determine whether it was received on a potential 'dummy date' */
WITH
  declarations_extended AS (
  SELECT
    declaration_id,
    declaration_type,
    declaration_created_at_date,
    declaration_date,
    participant_profile_id,
    state,
    cpd_lead_provider_name,
    statement_id,
    schedule_identifier,
    participant_type,
    cohort,
    statement_cohort,
    trn,
    milestone_start,
    milestone_end,
    DATE_DIFF(DATE(declaration_date),milestone_start,DAY) AS days_from_start,
    DATE_DIFF(DATE(declaration_date),milestone_start,DAY) = 0 AS first_day,
    DATE_DIFF(DATE(declaration_date),milestone_end,DAY) AS days_from_end,
    DATE_DIFF(DATE(declaration_date),milestone_end,DAY) = 0 AS last_day
  FROM
    ${ref("ecf_declarations")} declarations
  CROSS JOIN
    ${functions.orderedCohortMilestonesWithStartAndEndDates(ctx)}
  WHERE
    (DATE(declaration_date) BETWEEN milestone_start
      AND milestone_end)
    AND state IN ('eligible',
      'payable',
      'paid'))
SELECT
  *,
  COUNT(*) OVER (PARTITION BY participant_profile_id, milestone_start) AS participant_declarations_evidenced_in_milestone
FROM
  declarations_extended
WHERE
  cohort >= 2023
QUALIFY
  participant_declarations_evidenced_in_milestone > 1
  AND first_day IS FALSE
  AND last_day IS FALSE
