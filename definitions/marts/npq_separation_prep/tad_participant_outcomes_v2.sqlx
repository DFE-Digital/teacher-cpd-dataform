config {
    schema: "TAD",
    database: "ecf-bq",
    name: "participant_outcomes_v2",
    type: "table",
    assertions: {
        uniqueKey: ["outcome_id"]
    },
    bigquery: {
        partitionBy: "DATE(created_at)",
        clusterBy: ["state"]
    },
    description: "This table contains all course outcomes and is relevant for NPQ participants only",
    columns: {
        outcome_id: "This is the unique id for an NPQ outcome. This field was entirely generated post-separation in the new NPQ data model. We join this field on the declaration_id field in the declarations table to identify declarations paired with these outcomes. This field will not map onto historical outcome_ids generated prior to NPQ Separation (27/11/2024). If you would like to map historical outcome_ids please use the outcome_ecf_id field that hosts historical outcome_ids ",
        outcome_ecf_id: "This field contains the historical outcome_id that will have been created in the old data model pre-separation. This field is available in the new model but not used to join on other tables.  You can use this field if you want to map historical data that pre-dates the ECF & NPQ separation (27/12/2024).",
        created_at: "Date this entity was created according to the latest version of the data received from the database.",
        updated_at: "Date this entity was last updated something in the database, according to the latest version of the data received from the database.",
        participant_declaration_id: "This is the declaration id for a given outcome. You can map this field onto declaration_id in the declarations table."

    }
}


SELECT
  outcomes.id as outcome_id,
  outcomes.ecf_id AS outcome_ecf_id,
  outcomes.created_at,
  outcomes.updated_at,
  outcomes.completion_date,
  outcomes.declaration_id AS participant_declaration_id,
  outcomes.state
FROM
  ${ref(`participant_outcomes_latest_npq`)} AS outcomes
