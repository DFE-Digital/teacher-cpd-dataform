config {
    type: "table",
    assertions: {
        uniqueKey: ["id"]
    },
    bigquery: {
        partitionBy: "DATE(created_at)",
        clusterBy: ["state", "reason", "programme", "cpd_lp_name"]
    },
    description: "This mart provides a report that gives the current training_status for all participants across NPQ and ECF. This information is provided to users in the CPD Self-Serve Dashboard where it is filtered to show only withdrawn or deferred participants and the reason for their withdrawal/deferall. The primary users are the ECF schools team and NPQ Contract Managers.",
    columns: {
        id: "Unique ID of the record being pulled from the participant_profile_states table.",
        created_at: "Timestamp of when the record being pulled from participant_profile_states was created. Since participants can go through different training statuses, only the most recently created record for each participant is pulled.",
        updated_at: "Timestamp of when the record being pulled from participant_profile_states was updated.",
        lead_provider_id: "ID of the Lead Provider linked to the participant in participant_profile_states for ECF or applications for NPQ.",
        profile_id: "ID of each participant's profile. For ECF programme this is the participant_profile_id, for NPQ this is the user_id.",
        reason: "Explains why a participant is in a certain state.",
        state: "This is the participant's training_status. It can be active, deferred, or withdrawn.",
        last_streamed_event_occurred_at: "Timestamp of when the record  from participant_profile_states was most recently imported or updated",
        last_streamed_event_type: "Whether the most recent event for this record from participant_profile_states was it being imported or updated.",
        cohort: "Participant's cohort from either npq_enrolments or ecf_indcutions_dedupe.",
        schedule_identifier: "Participant's schedule from either npq_enrolments or ecf_indcutions_dedupe.",
        cpd_lp_name: "Name of the Lead Provider linked to the participan.",
        participant_type: "Details if a participant is an ECT, Mentor, or NPQ.",
        programme: "Details if a participant is associated with the ECF or NPQ programmes",
    }
}

WITH
  ecf_output AS (
  SELECT
    ppsl.id,
    ppsl.created_at,
    ppsl.updated_at,
    ppsl.cpd_lead_provider_id,
    ppsl.participant_profile_id,
    ppsl.reason,
    ppsl.state,
    ppsl.last_streamed_event_occurred_at,
    ppsl.last_streamed_event_type,
    ecfid.cohort AS cohort,
    ecfid.schedule_identifier AS schedule_identifier,
    ecfid.lead_provider_name AS cpd_lp_name,
    CASE
      WHEN ecfid.participant_type LIKE '%ECT' THEN 'ECT'
      WHEN ecfid.participant_type LIKE '%Mentor' THEN 'Mentor'
  END
    AS participant_type,
    'ECF' AS programme
  FROM
    ${ref(`participant_profile_states_latest_cpd`)} ppsl
  LEFT JOIN
    ${ref(`lead_providers_latest_cpd`)} lpl
  USING
    (cpd_lead_provider_id)
  INNER JOIN
    ${ref(`ecf_inductions_dedupe`)} ecfid
  USING
    (participant_profile_id) 
  QUALIFY (
    ROW_NUMBER() OVER (PARTITION BY ppsl.participant_profile_id ORDER BY ppsl.created_at DESC) = 1
  )
),

npq_output AS (
  SELECT
    ppsl.id,
    ppsl.created_at,
    ppsl.updated_at,
    ppsl.lead_provider_id,
    enr.ecf_user_id,
    ppsl.reason,
    ppsl.state,
    ppsl.last_streamed_event_occurred_at,
    ppsl.last_streamed_event_type,
    enr.cohort,
    enr.schedule_identifier,
    enr.provider_name AS cpd_lp_name,
    'NPQ' AS participant_type,
    'NPQ' AS programme
  FROM
    ${ref('application_states_latest_npq')} AS ppsl
  LEFT JOIN
    ${ref('applications_latest_npq')} AS app
  ON
    app.id = ppsl.application_id
  LEFT JOIN
    ${ref('users_latest_npq')} AS users
  ON
    users.id = app.user_id
  LEFT JOIN
    ${ref('npq_enrolments_v2')} AS enr
  ON
    enr.application_id = app.id
  QUALIFY(
    ROW_NUMBER() OVER (PARTITION BY ppsl.application_id ORDER BY ppsl.created_at DESC) = 1
  )
)


SELECT
  id,
  created_at,
  updated_at,
  cpd_lead_provider_id AS lead_provider_id,
  participant_profile_id AS profile_id,
  reason,
  state,
  last_streamed_event_occurred_at,
  last_streamed_event_type,
  cohort,
  schedule_identifier,
  cpd_lp_name,
  participant_type,
  programme
FROM
  ecf_output
UNION ALL
SELECT
  id,
  created_at,
  updated_at,
  lead_provider_id,
  ecf_user_id AS profile_id,
  reason,
  state,
  last_streamed_event_occurred_at,
  last_streamed_event_type,
  cohort,
  schedule_identifier,
  cpd_lp_name,
  participant_type,
  programme
FROM
  npq_output
